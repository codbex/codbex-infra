name: Application - Release

on:
  workflow_call:
    inputs:
      application-name:
        required: true
        type: string
      install-dependencies:
        type: boolean
        default: false
      release-version:
        type: string
        required: true
      release-content:
        type: string
      release-create-branch:
        type: boolean
        default: true
      dockerfile-location:
        type: string
        default:  ./
    
run-name: 'version set to ${{ inputs.release-version }} for release'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_TOKEN }}
        fetch-depth: 0

    - name: Install NodeJS
      if: ${{ inputs.install-dependencies }}
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install Dependencies
      if: ${{ inputs.install-dependencies }}
      run: |
        cd ${{ inputs.dockerfile-location }}
        echo "@codbex:registry=https://npm.pkg.github.com
        //npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" > .npmrc
        npm install
        rm -rf .npmrc

    - name: "Configure Git"
      run: |
        git fetch
        git checkout ${{ inputs.branch }}
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Build and Push Docker Image
      run: |
        cd ${{ inputs.dockerfile-location }}
        docker buildx create --name codbex-builder
        docker buildx use codbex-builder
        docker buildx build --tag ${{ inputs.application-name }} -o type=image --platform=linux/arm64,linux/amd64 .
        docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker buildx build --push --tag ghcr.io/codbex/${{ inputs.application-name }}:${{ inputs.release-version }} -o type=image --platform=linux/arm64,linux/amd64 .

    - name: Git Push Release Branch
      if: ${{ inputs.release-create-branch }}
      run: |
        git checkout -b ${{ inputs.release-version }}
        git push --set-upstream origin ${{ inputs.release-version }}

    - name: "Create Release"
      if: ${{ inputs.release-content }}
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ inputs.release-version }}
        name: ${{ inputs.release-version }}
        draft: false
        prerelease: false
        files: |
          LICENSE
        body: ${{ inputs.release-content }}
