name: Application - Pull Request

on:
  workflow_call:
    inputs:
      application-name:
        required: true
        type: string
      install-dependencies:
        type: boolean
        default: false
      dockerfile-location:
        type: string
        default: ./
      run-tests:
        type: boolean
        default: false
      test-param-name:
        type: string
        default: app.image

env:
  IMAGE_TAG: test
  NODE_VERSION: 18
  MAVEN_GOAL: verify  # failsafe or smth

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install NodeJS
        if: ${{ inputs.install-dependencies }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        if: ${{ inputs.install-dependencies }}
        run: |
          cd ${{ inputs.dockerfile-location }}
          echo "@codbex:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> .npmrc
          npm install
          rm -rf .npmrc

      - name: Build Docker Image
        run: |
          cd ${{ inputs.dockerfile-location }}
          docker build -t ${{ inputs.application-name }}:${{ env.IMAGE_TAG }} .

      - name: Run Tests
        if: ${{ inputs.run-tests }}
        env:
          TEST_IMAGE: ${{ inputs.application-name }}:${{ env.IMAGE_TAG }}
        run: |
          # Set up Java
          echo "JAVA_HOME=$JAVA_HOME_21_X64" >> $GITHUB_ENV
          
          # Configure Maven and Testcontainers
          echo "TESTCONTAINERS_DOCKER_IMAGE_PULL_POLICY=never" >> $GITHUB_ENV
          
          # Run tests with proper working directory
          cd ${{ inputs.dockerfile-location }}
          mvn ${{ env.MAVEN_GOAL }} -P integration-tests -D${{ inputs.test-param-name }}=$TEST_IMAGE