name: Application - Pull Request

on:
  workflow_call:
    inputs:
      application-name:
        required: true
        type: string
      install-dependencies:
        type: boolean
        default: false
      dockerfile-location:
        type: string
        default: ./
      run-tests:
        type: boolean
        default: false
      tests-package:
        type: string
        default: "*.tests.application.*IT"

env:
  APP_IMAGE: ${{ inputs.application-name }}:test

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Application setup
      - name: Install NodeJS
        if: ${{ inputs.install-dependencies }}
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Build Application
        run: |
          cd ${{ inputs.dockerfile-location }}
          
          if [ "${{ inputs.install-dependencies }}" = "true" ]; then
            echo "Installing dependencies..."
            echo "@codbex:registry=https://npm.pkg.github.com" > .npmrc
            echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> .npmrc
            npm install
            rm -rf .npmrc
          fi
          
          docker build -t $APP_IMAGE:test .

      - name: Run Tests
        if: ${{ inputs.run-tests }}
        run: |
          # Verify images exist
          docker inspect $APP_IMAGE

          # Run tests with local images
          echo "TESTCONTAINERS_DOCKER_IMAGE_PULL_POLICY=never" >> $GITHUB_ENV
          
          mvn clean install -P integration-tests -Dit.test=${{ inputs.tests-package }} -Dapp.image=$APP_IMAGE

      - name: Generate a random artifact name
        if: always()
        id: generate_name
        run: |
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          echo "ARTIFACT_NAME=selenide-screenshots-${TIMESTAMP}.zip" >> $GITHUB_ENV

      - name: Upload selenide screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          retention-days: 1
          name: ${{ env.ARTIFACT_NAME }}
          path: integration-tests/build/reports/tests